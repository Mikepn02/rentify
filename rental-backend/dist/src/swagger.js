"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const swagger_autogen_1 = __importDefault(require("swagger-autogen"));
const dotenv_1 = __importDefault(require("dotenv"));
dotenv_1.default.config();
const PORT = process.env.PORT || 3000;
const host = process.env.HOST || "localhost";
const doc = {
    info: {
        version: "1.0.0",
        title: "Rental Booking",
        description: "Documentation automatically generated by the <b>swagger-autogen</b> module.",
    },
    host: `${host}:${PORT}`,
    basePath: "/",
    schemes: ["http", "https"],
    consumes: ["application/json"],
    produces: ["application/json"],
    tags: [
        {
            name: "Auth",
            description: "Authentication routes",
        },
    ],
    securityDefinitions: {
        apiKeyAuth: {
            type: "apiKey",
            in: "header", // can be "header", "query" or "cookie"
            name: "X-API-KEY", // name of the header, query parameter or cookie
            description: "any description...",
        },
    },
    definitions: {
        Parents: {
            father: "Simon Doe",
            mother: "Marie Doe",
        },
        User: {
            name: "Jhon Doe",
            age: 29,
            parents: {
                $ref: "#/definitions/Parents",
            },
            diplomas: [
                {
                    school: "XYZ University",
                    year: 2020,
                    completed: true,
                    internship: {
                        hours: 290,
                        location: "XYZ Company",
                    },
                },
            ],
        },
        AddUser: {
            $name: "Jhon Doe",
            $age: 29,
            about: "",
        },
    },
};
const outputFile = "../swagger-output.json";
const endpointsFiles = ["./app"];
exports.default = (0, swagger_autogen_1.default)()(outputFile, endpointsFiles, doc);
